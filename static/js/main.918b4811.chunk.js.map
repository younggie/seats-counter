{"version":3,"sources":["AppStyles.styles.tw.js","components/Party.js","components/common.js","App.js","serviceWorker.js","index.js"],"names":["AppStyles","styled","div","attrs","className","Span","span","party","pid","party_ratio","party_count","local_seat","pr2","pr1","toFixed","Party","quota","calcurator","case_no","party_list","i","temp_party","id","seat","ratio","push","forEach","each","BS","not_party","base_seat","console","log","get_base_seat","total_ps","num","Math","round","share_total","share_num","floor","rest_seat","share_party_list","under","temp","sort","a","b","share_party_list2","insert_idx","length","pt","over_case","rest_seat_original","fsbn","under_case","pararal_share_total","share","under_num","para_share","App","state","sid","sample_data","handleSelect","setState","this","total_local","map","total_ratio","tatal_pr1","tatal_pr2","numbers","key","style","marginTop","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.918b4811.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport tw from \"tailwind.macro\";\n\nconst AppStyles = styled.div.attrs({\n  className: \"w-full flex flex-col items-center justify-center\"\n})`\n  & {\n    h1 {\n      ${tw`font-sans text-6xl font-hairline text-6xl text-teal-500`}\n    }\n    p {\n      ${tw`text-gray-700 text-lg`}\n    }\n    h2 {\n      ${tw`text-2xl font-hairline mt-5 text-teal-500`}\n    }\n    ul {\n      ${tw`inline-flex`}\n    }\n    li {\n      ${tw`mr-5`}\n    }\n    a {\n      ${tw`text-blue-500 hover:text-gray-500 hover:underline`}\n    }\n  }\n`;\nexport default AppStyles;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Span = styled.span`\n  font-size: 0.7em;\n  margin-left: 5px;\n`;\n\nconst party = ({ pid, party_ratio, party_count, local_seat, pr2, pr1 }) => {\n  return (\n    <tr>\n      <td className=\"my_td\">\n        {pid < party_count + 1 ? `정당 ${pid}` : \"무소속\"}{\" \"}\n      </td>\n      <td className=\"my_td\">\n        {party_ratio[pid - 1]}\n        <Span> %</Span>\n      </td>\n      <td className=\"my_td\">{local_seat[pid - 1]}</td>\n      <td className=\"my_td\">{pr1}</td>\n      <td className=\"my_td\">{pr2}</td>\n      <td className=\"my_td\">\n        {local_seat[pid - 1] + (pr1 ? pr1 : 0) + (pr2 ? pr2 : 0)}\n      </td>\n      <td className=\"my_td\">\n        {(\n          ((local_seat[pid - 1] + (pr1 ? pr1 : 0) + (pr2 ? pr2 : 0)) / 300) *\n          100\n        ).toFixed(2)}\n        <Span> %</Span>\n      </td>\n    </tr>\n  );\n};\n\nexport default party;\n","class Party {\n  id;\n  seat;\n  ratio;\n  quota = 0;\n  pr1 = 0;\n  pr2 = 0;\n}\n\nexport function calcurator(case_no, local_seat, party_ratio, party_count) {\n  //console.clear();\n  let party_list = [];\n  //console.log(\"local_seat:\", party_count);\n\n  for (var i = 1; i <= party_count; i++) {\n    let temp_party = new Party();\n    temp_party.quota = 0;\n    temp_party.id = i;\n    temp_party.seat = local_seat[i - 1];\n    temp_party.ratio = party_ratio[i - 1];\n\n    if (\n      temp_party.ratio !== 0 &&\n      (temp_party.seat >= 5 || temp_party.ratio >= 3)\n    ) {\n      temp_party.quota = 1;\n    }\n\n    party_list.push(temp_party);\n  }\n\n  party_list.forEach(each => {\n    //console.log(each.id, each.quota);\n  });\n  let not_party = local_seat[party_count];\n  let BS = get_base_seat(party_list, not_party);\n\n  //console.log(case_no, BS);\n\n  //연동비례 1차 배분 - 반올림 후  정수배분\n\n  let total_ps = 0;\n  party_list.forEach(each => {\n    if (each.quota) {\n      let num = ((BS * each.ratio) / 100 - each.seat) / 2;\n      if (num > 0) {\n        num = Math.round(num);\n        each.pr1 = num;\n        total_ps += num;\n        //console.log(each.id, num);\n      }\n    }\n  });\n  party_list.forEach(each => {\n    if (each.quota) {\n      console.log(\"1차 배분 결과 \", each.id, each.pr1);\n    }\n  });\n  console.log(\"1차 배분 결과 합계: \", total_ps);\n  if (total_ps === 30) {\n  } else {\n    if (total_ps > 30) {\n      //배분 다시계신\n      over_case(party_list, BS, total_ps);\n    } else {\n      under_case(party_list, BS, total_ps);\n    }\n  }\n\n  //병립형 배분\n  para_share(party_list);\n  return party_list;\n}\n\nfunction para_share(party_list) {\n  let pararal_share_total = 0;\n\n  console.log(\"병립형 배분\");\n  party_list.forEach(each => {\n    if (each.quota) {\n      let share = Math.floor((17 * each.ratio) / 100);\n      each.pr2 = share;\n      pararal_share_total = pararal_share_total + share;\n\n      console.log(each.id, share);\n    }\n  });\n  let rest_seat = 17 - pararal_share_total;\n  console.log(\"병립형 배분 나머지 자리: \", rest_seat);\n  if (rest_seat) {\n    var share_party_list = [];\n    party_list.forEach(each => {\n      if (each.quota) {\n        let under_num =\n          (17 * each.ratio) / 100 - Math.floor((17 * each.ratio) / 100);\n\n        let temp = { party: each.id, under: under_num };\n        share_party_list.push(temp);\n      }\n    });\n    var sortingField = \"under\";\n    share_party_list.sort(function(a, b) {\n      // 내림차순\n      return b[sortingField] - a[sortingField];\n      // 44, 25, 21, 13\n    });\n    //배분순서 17개 만들기\n    let share_party_list2 = [];\n\n    for (var i = 0; i < 17; i++) {\n      let insert_idx = i % share_party_list.length;\n      share_party_list2.push(share_party_list[insert_idx]);\n    }\n\n    //나머지 의석 0 될때까지 반복 배분\n    //console.log(\"연동비례 배분결과 -2차 배분 전:\");\n    party_list.forEach(each => {\n      //console.log(each.id, each.pr1);\n    });\n    share_party_list2.forEach(each => {\n      if (rest_seat > 0) {\n        party_list.forEach(pt => {\n          if (each.party === pt.id) {\n            pt.pr2 = pt.pr2 + 1;\n          }\n        });\n\n        rest_seat = rest_seat - 1;\n      } else {\n        //console.log(each.party);\n        return false;\n      }\n    });\n\n    party_list.forEach(each => {\n      console.log(each.id, each.pr2);\n    });\n  }\n}\n\nfunction under_case(party_list, BS, total_ps) {\n  console.log(\"1차 배분 30미만인 경우\");\n  console.log(\"1차 배분 기초수치, 정수배분\");\n  let rest_seat = 30 - total_ps;\n  let rest_seat_original = rest_seat;\n\n  party_list.forEach(each => {\n    if (each.quota) {\n      let num = (rest_seat * each.ratio) / 100;\n\n      if (Math.floor(num) > 0) {\n        each.pr1 = each.pr1 + Math.floor(num);\n        rest_seat = rest_seat - Math.floor(num);\n      }\n\n      console.log(each.id, num, Math.floor(num));\n    }\n  });\n\n  console.log(\"1차 재배분 후 남은 자리: \", rest_seat);\n\n  if (rest_seat) {\n    var share_party_list = [];\n    party_list.forEach(each => {\n      if (each.quota) {\n        let fsbn = (rest_seat_original * each.ratio) / 100;\n        let under = fsbn - Math.floor(fsbn);\n        if (fsbn > 0) {\n          let temp = { party: each.id, under: under };\n          share_party_list.push(temp);\n        }\n      }\n    });\n\n    let sortingField = \"under\";\n\n    share_party_list.sort(function(a, b) {\n      // 내림차순\n      return b[sortingField] - a[sortingField];\n      // 44, 25, 21, 13\n    });\n    //배분순서 30개 만들기\n    let share_party_list2 = [];\n\n    for (var i = 0; i < 30; i++) {\n      let insert_idx = i % share_party_list.length;\n      share_party_list2.push(share_party_list[insert_idx]);\n    }\n\n    console.log(\"소수점 이하 배분 순서:\");\n    share_party_list2.forEach(each => {\n      console.log(each.party, each.under);\n    });\n    //나머지 의석 0 될때까지 반복 배분\n    //console.log(\"연동비례 배분결과 -2차 배분 전:\");\n    party_list.forEach(each => {\n      //console.log(each.id, each.pr1);\n    });\n    share_party_list2.forEach(each => {\n      if (rest_seat > 0) {\n        console.log(each.party);\n        party_list.forEach(pt => {\n          if (each.party === pt.id) {\n            pt.pr1 = pt.pr1 + 1;\n          }\n        });\n\n        rest_seat = rest_seat - 1;\n      } else {\n        //console.log(each.party);\n        return false;\n      }\n    });\n    console.log(\"연동비례 배분결과:\");\n    party_list.forEach(each => {\n      console.log(each.id, each.pr1);\n    });\n  }\n  return 0;\n}\n\nfunction over_case(party_list, BS, total_ps) {\n  console.log(\"1차 배분 30초과한 경우\", BS);\n  //1차 배분 취소\n  party_list.forEach(each => {\n    if (each.quota) {\n      each.pr1 = 0;\n    }\n  });\n  //다시계산\n  let share_total = 0;\n  party_list.forEach(each => {\n    if (each.quota) {\n      let fsbn = ((BS * each.ratio) / 100 - each.seat) / 2;\n      let num = (30 * fsbn) / total_ps;\n\n      let share_num = 0;\n      if (num > 0) {\n        share_num = Math.floor(num);\n        share_total = share_total + share_num;\n      }\n      each.pr1 = share_num;\n\n      console.log(\"배분 기초 수치, 배분\", each.id, num, share_num);\n    }\n  });\n  console.log(\"배분 합계\", share_total);\n\n  //1차 배분 잔여의석 배분\n  let rest_seat = 30 - share_total;\n  if (rest_seat > 0) {\n    //소수점 이하 기준 배분 순서 리스트 생성\n    var share_party_list = [];\n    party_list.forEach(each => {\n      if (each.quota) {\n        let fsbn = ((BS * each.ratio) / 100 - each.seat) / 2;\n        let num = (30 * fsbn) / total_ps;\n        let under = num - Math.floor(num);\n        if (num > 0) {\n          let temp = { party: each.id, under: under };\n          share_party_list.push(temp);\n        }\n      }\n    });\n    let sortingField = \"under\";\n\n    share_party_list.sort(function(a, b) {\n      // 내림차순\n      return b[sortingField] - a[sortingField];\n      // 44, 25, 21, 13\n    });\n\n    //배분순서 30개 만들기\n    let share_party_list2 = [];\n\n    for (var i = 0; i < 30; i++) {\n      let insert_idx = i % share_party_list.length;\n      share_party_list2.push(share_party_list[insert_idx]);\n    }\n\n    console.log(\"소수점 이하 배분 순서:\");\n    share_party_list.forEach(each => {\n      console.log(each.party, each.under);\n    });\n\n    //나머지 의석 0 될때까지 반복 배분\n    //console.log(\"연동비례 배분결과 -2차 배분 전:\");\n    party_list.forEach(each => {\n      //console.log(each.id, each.pr1);\n    });\n    share_party_list2.forEach(each => {\n      if (rest_seat > 0) {\n        console.log(each.party);\n        party_list.forEach(pt => {\n          if (each.party === pt.id) {\n            pt.pr1 = pt.pr1 + 1;\n          }\n        });\n\n        rest_seat = rest_seat - 1;\n      } else {\n        //console.log(each.party);\n        return false;\n      }\n    });\n    console.log(\"연동비례 배분결과:\");\n    party_list.forEach(each => {\n      console.log(each.id, each.pr1);\n    });\n  }\n\n  return 0;\n}\n\nfunction get_base_seat(party_list, not_party) {\n  let base_seat = 300;\n  party_list.forEach(each => {\n    if (each.quota === 0) {\n      console.log(each.id, each.seat);\n      base_seat = base_seat - each.seat;\n    }\n  });\n\n  base_seat = base_seat - not_party;\n\n  return base_seat;\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport AppStyles from \"./AppStyles.styles.tw\";\nimport Party from \"./components/Party\";\nimport { calcurator } from \"./components/common\";\n\nclass App extends Component {\n  state = {\n    sid: 1,\n    party_count: 9,\n    party_ratio: [25.54, 33.5, 26.79, 14.17, 0, 0, 0, 0, 0, 0],\n    local_seat: [110, 105, 25, 2, 0, 0, 0, 0, 0, 11],\n    party_list: null\n  };\n\n  sample_data = [\n    {},\n    {\n      party_ratio: [25.54, 33.5, 26.79, 14.17, 0, 0, 0, 0, 0, 0],\n      local_seat: [110, 105, 25, 2, 0, 0, 0, 0, 0, 11]\n    },\n    {\n      party_ratio: [50, 0, 25, 17, 0, 0, 0, 0, 0, 0],\n      local_seat: [130, 120, 0, 3, 0, 0, 0, 0, 0, 0]\n    },\n    {\n      party_ratio: [42.64, 37.85, 4.83, 4.48, 5.19, 5, 0, 0, 0, 0],\n      local_seat: [141, 85, 7, 8, 2, 7, 0, 0, 0, 3]\n    },\n    {\n      party_ratio: [48.75, 38.79, 4.98, 3.8, 2.49, 1.19, 0, 0, 0, 0],\n      local_seat: [116, 98, 2, 4, 5, 7, 0, 0, 0, 21]\n    },\n    {\n      party_ratio: [33, 23, 25, 12, 3, 3, 1, 0, 0, 0],\n      local_seat: [116, 98, 3, 2, 4, 0, 11, 0, 0, 19]\n    },\n    {\n      party_ratio: [38.37, 0, 29.07, 13.95, 3.49, 3.49, 1.16, 3.49, 3.49, 3.49],\n      local_seat: [116, 98, 3, 2, 4, 0, 11, 0, 0, 19]\n    }\n  ];\n  party_list = null;\n  handleSelect = id => {\n    const party_list = calcurator(\n      id,\n      this.sample_data[id].local_seat,\n      this.sample_data[id].party_ratio,\n      this.state.party_count\n    );\n    //console.log(this.party_list);\n    this.setState({\n      party_ratio: this.sample_data[id].party_ratio,\n      local_seat: this.sample_data[id].local_seat,\n      sid: id,\n      party_list\n      //party_list: party_list\n    });\n  };\n\n  async componentDidMount() {\n    const party_list = calcurator(\n      1,\n      this.state.local_seat,\n      this.state.party_ratio,\n      this.state.party_count\n    );\n    this.setState({\n      party_list\n    });\n\n    //console.log(party_list);\n  }\n  render() {\n    const {\n      party_count,\n      party_ratio,\n      local_seat,\n      sid,\n      party_list\n    } = this.state;\n\n    //지역구 합계\n    let total_local = 0;\n    if (party_list !== null) {\n      party_list.map(each => {\n        total_local += each.seat;\n      });\n\n      total_local += this.state.local_seat[this.state.party_count];\n    }\n    //득표율 합계\n    let total_ratio = 0;\n    if (party_list !== null) {\n      party_list.map(each => {\n        total_ratio += each.ratio;\n      });\n\n      total_ratio += this.state.party_ratio[this.state.party_count];\n    }\n\n    //준연동 합계\n    let tatal_pr1 = 0;\n    if (party_list !== null) {\n      party_list.map(each => {\n        tatal_pr1 += each.pr1;\n      });\n    }\n    //병립 합계\n    let tatal_pr2 = 0;\n    if (party_list !== null) {\n      party_list.map(each => {\n        tatal_pr2 += each.pr2;\n      });\n    }\n\n    let numbers = [];\n    for (var i = 1; i <= party_count; i++) {\n      numbers.push(i);\n    }\n\n    return (\n      <AppStyles>\n        <h1>의석수 계산기</h1>\n        <table className=\"table-auto\">\n          <thead>\n            <tr>\n              <th className=\"px-4 py-2\">정당</th>\n              <th className=\"px-4 py-2\">정당득표</th>\n              <th className=\"px-4 py-2\">지역구</th>\n              <th className=\"px-4 py-2\">준연동비례</th>\n              <th className=\"px-4 py-2\">병립형비례</th>\n              <th className=\"px-4 py-2\">전체의석</th>\n              <th className=\"px-4 py-2\">의석비율</th>\n            </tr>\n          </thead>\n          <tbody>\n            {numbers.map(pid => (\n              <Party\n                pid={pid}\n                key={pid}\n                party_ratio={party_ratio}\n                party_count={party_count}\n                local_seat={local_seat}\n                pr2={party_list !== null ? party_list[pid - 1].pr2 : null}\n                pr1={party_list !== null ? party_list[pid - 1].pr1 : null}\n              />\n            ))}\n            <Party\n              pid={party_count + 1}\n              key={party_count + 1}\n              party_count={party_count}\n              party_ratio={party_ratio}\n              local_seat={local_seat}\n            />\n            <tr>\n              <td className=\"my_td\">합계</td>\n              <td className=\"my_td\">{total_ratio.toFixed(2)}</td>\n              <td className=\"my_td\">{total_local}</td>\n              <td className=\"my_td\">{tatal_pr1}</td>\n              <td className=\"my_td\">{tatal_pr2}</td>\n              <td className=\"my_td\">{total_local + tatal_pr1 + tatal_pr2}</td>\n              <td className=\"my_td\">{}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div\n          style={{\n            marginTop: \"20px\"\n          }}\n        >\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(1)}>\n            사례1\n          </button>\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(2)}>\n            사례2\n          </button>\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(3)}>\n            사례3\n          </button>\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(4)}>\n            사례4\n          </button>\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(5)}>\n            사례5\n          </button>\n          <button className=\"btn_outline\" onClick={() => this.handleSelect(6)}>\n            사례6\n          </button>\n        </div>\n      </AppStyles>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}